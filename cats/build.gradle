import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.library'

dependencies {
    implementation 'org.aspectj:aspectjrt:1.9.6'
    implementation 'androidx.annotation:annotation:1.1.0'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.5.13'
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {}

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        devrelease {
            initWith release
        }
    }
    defaultConfig {
        targetSdkVersion 29
        minSdkVersion 16
    }
}

tasks.withType(JavaCompile) {
    doLast {
        println "weaving cats..."
        String[] args = [
                "-showWeaveInfo",
                "-1.5",
                "-inpath", destinationDir.toString(),
                "-aspectpath", classpath.asPath,
                "-d", destinationDir.toString(),
                "-classpath", classpath.asPath,
                "-bootclasspath", android.bootClasspath.join(File.pathSeparator)
        ]

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)

        def log = project.logger
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error "ERROR: " + message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn "WARN: " + message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.warn "INFO: " + message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.warn "DEBUG " + message.message, message.thrown
                    break
            }
        }
    }
}
